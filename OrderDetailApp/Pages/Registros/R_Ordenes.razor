@page "/Ordenes"
@page "/Ordenes/{OrderId:int}"

@using Models
@using BLL

<EditForm Model="Ordenes" OnValidSubmit="Guardar">
    <DataAnnotationsValidator/>
    <div class="card">
        <div class="card-header" style="background-color:aquamarine">
            <h3><strong>Registro de ordenes</strong></h3>
        </div>
        <div class="card-body">
            <form>
                <div class="form-row align-items-center">
                    <div class="col">
                        <div class="form-group">
                            <label>OrdenId: </label>
                            <div class="input-group">
                                <InputNumber @bind-Value="Ordenes.OrderId" class="form-control col-4" />
                                <div class="input-group-append">
                                    <button type="button" class="btn btn-primary input-group-text" @onclick="Buscar">Buscar</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                @*Fecha*@
                <div class="form-group">
                    <label>Fecha: </label>
                    <InputDate @bind-Value="Ordenes.Fecha" class="form-control" />
                    <ValidationMessage For="@(()=> Ordenes.Fecha)" />
                </div>
                @*Suplidor*@
                <div class="form-group">
                    <label>Suplidor: </label>
                    <select @bind="Ordenes.SuplidorId" class="form-control">
                        @foreach (var item in SuplidoresBLL.GetSuplidores())
                        {
                            <option value="@item.SuplidorId">@item.Nombre</option>
                        }
                    </select>
                    <ValidationMessage For="@(()=> Ordenes.SuplidorId)" />
                </div>
                @*Detalle*@
            <div class="card">
                <div class="card-header" style="background-color:aquamarine">
                    <div class="form-row">
                        <div class="form-group col">
                            <label><strong>Producto: </strong></label>
                            <select class="form-control" @bind="ProductoId" @onfocusout="PullData">
                                @foreach (var item in ProductosBLL.GetProductos())
                                {
                                    <option value="@item.ProductoId">@item.Descripcion</option>
                                }
                            </select>
                        </div>

                        <div class="form-group col">
                            <label><strong>Cantidad:</strong></label>
                            <div class="input-group">
                                <InputNumber @bind-Value="Cantidad" class="form-control" @onfocusout="calcularImporte"/>
                            </div>
                        </div>

                        <div class="form-group col">
                            <label><strong>Costo:</strong></label>
                            <div class="input-group">
                                <InputNumber @bind-Value="Costo" class="form-control" />
                            </div>
                        </div>

                        <div class="form-group col">
                            <label><strong>Importe: </strong></label>
                            <div class="input-group">
                                <InputNumber @bind-Value="Importe" class="form-control" />
                                <div class="input-group-append">
                                    <button type="button" class="btn btn-secondary" @onclick="AgregarAlDetalle"><span class="oi oi-plus"></span></button>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
                <div class="card-body">
                    <table class="table">
                        <thead>
                            <tr>
                                <th scope="col">Descripcion</th>
                                <th scope="col">Cantidad</th>
                                <th scope="col">Costo</th>
                                <th scope="col">Importe</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Ordenes.OrderDetail)
                            {
                                <tr>
                                    <td>@ProductosBLL.Buscar(item.ProductoId).Descripcion</td>
                                    <td>@item.Cantidad</td>
                                    <td>@ProductosBLL.Buscar(item.ProductoId).Costo</td>
                                    <td>@(item.Cantidad*ProductosBLL.Buscar(item.ProductoId).Costo)</td>
                                </tr>
                            }

                        </tbody>
                    </table>
                </div>
                <div class="card-footer" style="background-color:aquamarine">
                    <div class="form-group">
                        <div class="col-4">
                            <button type="button" class="btn btn-secondary" @onclick="RemoverFila">Remover articulo</button>
                        </div>
                    </div>
                </div>
            </div>

            <br />
            <div class="form-group">
                <label>Monto: </label>
                <InputNumber @bind-Value="Ordenes.Monto" class="form-control" readonly></InputNumber>
            </div>
            </form>
        </div>
        <div class="card-footer" style="background-color:aquamarine">
            <div class="form-group text-center" display: inline-block>
                <button type="button" class="btn btn-lg btn-primary" @onclick="Nuevo"><span class="oi oi-file"></span> Nuevo</button>
                <button type="submit" class="btn btn-lg btn-success"><span class="oi oi-check"></span> Guardar</button>
                <button type="button" class="btn btn-lg btn-danger" @onclick="Eliminar"><span class="oi oi-circle-x"></span> Eliminar</button>
            </div>
        </div>
    </div>

</EditForm> 

 
@code {

    [Parameter]
    public int OrderId { get; set; }
    private Ordenes Ordenes = new Ordenes();
    public int ProductoId { get; set; }
    public double Cantidad { get; set; }
    public double Costo { get; set; }
    public double Importe { get; set; }
    public double Monto { get; set; }

    protected override void OnInitialized()
    {
        Nuevo();
        Buscar();
        CalcularMonto();
    }

    public void Nuevo()
    {
        ProductoId = 0;
        Cantidad = 0;
        Costo = 0;
        Importe = 0;
        Ordenes = new Ordenes();
    }
    public void Buscar()
    {

        if (Ordenes.OrderId > 0)
        {
            var encontrado = OrdenesBLL.Buscar(Ordenes.OrderId);

            if (encontrado != null)
                this.Ordenes = encontrado;

        }
        CalcularMonto();
    }
    public void AgregarAlDetalle()
    {
        Ordenes.OrderDetail.Add(new OrdenesDetalle
        {
            ProductoId = ProductoId,
            OrderId = Ordenes.OrderId,
            Cantidad = Cantidad,
            Costo = Costo,
        }

        );
        CalcularMonto();
    }
    public void Guardar()
    {
        bool guardo;

        guardo = OrdenesBLL.Guardar(Ordenes);

        if (guardo)
        {
            Nuevo();
        }
        else
        {
            Nuevo();
        }
    }
    public void Eliminar()
    {
        bool elimino;

        elimino = OrdenesBLL.Eliminar(Ordenes.OrderId);

        if (elimino)
        {
            Nuevo();
        }
    }
    public void PullData()
    {
        if (ProductoId != 0)
        {
            Costo = ProductosBLL.Buscar(ProductoId).Costo;
        }
    }
    public void calcularImporte()
    {
        Importe = Costo * Cantidad;
    }
    public void CalcularMonto()
    {
        Ordenes.Monto = 0;
        foreach (var item in Ordenes.OrderDetail)
        {
            Ordenes.Monto += ProductosBLL.Buscar(item.ProductoId).Costo * item.Cantidad;
        }
    }
    public void RemoverFila()
    {
        if(Ordenes.OrderDetail.Count-1 >= 0)
        {
            int itemARemover = Ordenes.OrderDetail.Count - 1;
            Ordenes.OrderDetail.RemoveAt(itemARemover);
        }
        CalcularMonto();
    }
}
